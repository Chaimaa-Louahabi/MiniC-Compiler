test {
    int v = 1;
    int *ptr = &v;
    int j = *ptr;
    //*ptr = 2;
    int t[] = new int[5];
    int i = t[3];
    t[3] = 4;
}
/*test{
	int i = 1;
	const int N = 100;
	
    //tester couple type
    <int, int> couple = <2, 3>;
    int x = fst couple;
    int y = snd couple;
    
    //tester array type
    int table []= new int[3];
    table[2] = 2 + N + table[1];
    int v = (int) 1;
    //tester pointer type
    int *ptr = &i;
    int j = *ptr;
    
    //tester enum type
    typedef enum grade { A, B, C, D}Grade;
    
    Grade noteMax = A;
    //tester struct type
    typedef struct etudiant{
        int age;
        float moyenne;
    }Etudiant;
    Etudiant Jean = {18, 19.99};
    float meanJean = Jean.moyenne;
    //tester conditional
    int k = i<2 ? 3 : 4;
    if (true) {
        i = i - 1 ;
    }else {
    	i = i +1;
    }
    //tester repetition
    while (i <100) {
        i = i+1;
    }
    //tester function declaration
    int max(int a, int b) {
        return a>b? a:b;
    }
    //tester function call
    int result = max(5,6);
    //print "the max of 5 and 6 is " + result;
    
}

test {
   int fact( int n ) {
     if ( n == 0 ) {
       return 1;
     } else {
       return n * (n - 1);
     }
   }
   print fact ( 5 );
 }
pgcd {
   const int test = 0;
   int pgcd( <int,int> c ) {
     int a = fst c;
     int b = snd c;
     while (a * b != test) {
       if ( a > b ) {
 			int na = a-b;
 			a = na;
       } else {
 			int nb = b-a;
 			b = nb;
       }
     }
     int res = a;
     if (res == test) {
       res = b;
     }
     return res;
   }
   print pgcd( <47,53> );
   
 }*/
